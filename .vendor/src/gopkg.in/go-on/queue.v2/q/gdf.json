{
  "Exports": {
    "Call": "queue.Call",
    "CallNamed": "queue.CallNamed",
    "Collect": "queue.Collect",
    "Err": "func (github.com/go-on/queue.ErrHandler) QFunc",
    "Fallback": "queue.Fallback",
    "Get": "queue.Get",
    "IGNORE": "queue.IGNORE",
    "Ok": "queue.Ok",
    "PANIC": "queue.PANIC",
    "Q": "func (interface{},...interface{}) QFunc",
    "QFunc": "type QFunc (interface{},...interface{}) QFunc",
    "QFunc.Add": "(QFunc) Add(interface{},...interface{}) QFunc",
    "QFunc.AddNamed": "(QFunc) AddNamed(string,interface{},...interface{}) QFunc",
    "QFunc.CheckAndRun": "(QFunc) CheckAndRun() error",
    "QFunc.Err": "(QFunc) Err(github.com/go-on/queue.ErrHandler) QFunc",
    "QFunc.LogDebugTo": "(QFunc) LogDebugTo(io.Writer) QFunc",
    "QFunc.LogErrorsTo": "(QFunc) LogErrorsTo(io.Writer) QFunc",
    "QFunc.Name": "(QFunc) Name() string",
    "QFunc.Queue": "(QFunc) Queue() *github.com/go-on/queue.Queue",
    "QFunc.Run": "(QFunc) Run() error",
    "QFunc.SetName": "(QFunc) SetName(string) QFunc",
    "QFunc.Sub": "(QFunc) Sub(...queue.Queuer) QFunc",
    "QFunc.Tee": "(QFunc) Tee(interface{},...interface{}) QFunc",
    "QFunc.TeeAndCheckAndFallback": "(QFunc) TeeAndCheckAndFallback(...queue.Queuer) QFunc",
    "QFunc.TeeAndCheckAndRun": "(QFunc) TeeAndCheckAndRun(...queue.Queuer) QFunc",
    "QFunc.TeeAndFallback": "(QFunc) TeeAndFallback(...queue.Queuer) QFunc",
    "QFunc.TeeAndRun": "(QFunc) TeeAndRun(...queue.Queuer) QFunc",
    "QFunc.TeeNamed": "(QFunc) TeeNamed(string,interface{},...interface{}) QFunc",
    "Run": "queue.Run",
    "STOP": "queue.STOP",
    "Set": "queue.Set",
    "V": "queue.PIPE",
    "Value": "queue.Value",
    "init": ""
  },
  "Imports": {
    "github.com/go-on/queue.*Queue.Add": "(*Queue) Add(interface{},...interface{}) *Queue",
    "github.com/go-on/queue.*Queue.AddNamed": "(*Queue) AddNamed(string,interface{},...interface{}) *Queue",
    "github.com/go-on/queue.*Queue.Check": "(*Queue) Check() error",
    "github.com/go-on/queue.*Queue.CheckAndRun": "(*Queue) CheckAndRun() error",
    "github.com/go-on/queue.*Queue.LogDebugTo": "(*Queue) LogDebugTo(io.Writer) *Queue",
    "github.com/go-on/queue.*Queue.LogErrorsTo": "(*Queue) LogErrorsTo(io.Writer) *Queue",
    "github.com/go-on/queue.*Queue.Name": "(*Queue) Name() string",
    "github.com/go-on/queue.*Queue.OnError": "(*Queue) OnError(ErrHandler) *Queue",
    "github.com/go-on/queue.*Queue.Queue": "(*Queue) Queue() *Queue",
    "github.com/go-on/queue.*Queue.Run": "(*Queue) Run() error",
    "github.com/go-on/queue.*Queue.SetName": "(*Queue) SetName(string) *Queue",
    "github.com/go-on/queue.*Queue.Sub": "(*Queue) Sub(...Queuer) *Queue",
    "github.com/go-on/queue.*Queue.Tee": "(*Queue) Tee(interface{},...interface{}) *Queue",
    "github.com/go-on/queue.*Queue.TeeAndCheckAndFallback": "(*Queue) TeeAndCheckAndFallback(...Queuer) *Queue",
    "github.com/go-on/queue.*Queue.TeeAndCheckAndRun": "(*Queue) TeeAndCheckAndRun(...Queuer) *Queue",
    "github.com/go-on/queue.*Queue.TeeAndFallback": "(*Queue) TeeAndFallback(...Queuer) *Queue",
    "github.com/go-on/queue.*Queue.TeeAndRun": "(*Queue) TeeAndRun(...Queuer) *Queue",
    "github.com/go-on/queue.*Queue.TeeNamed": "(*Queue) TeeNamed(string,interface{},...interface{}) *Queue",
    "github.com/go-on/queue.Call": "func (interface{},...interface{}) *call",
    "github.com/go-on/queue.CallNamed": "func (string,interface{},...interface{}) *call",
    "github.com/go-on/queue.Collect": "func (interface{},...interface{}) interface{}",
    "github.com/go-on/queue.ErrHandler": "type ErrHandler interface {HandleError(error) error}",
    "github.com/go-on/queue.Fallback": "func (...Queuer) callfallback",
    "github.com/go-on/queue.Get": "func (interface{}) interface{}",
    "github.com/go-on/queue.IGNORE": "ErrHandlerFunc(func(err error) error { return nil })",
    "github.com/go-on/queue.New": "func () *Queue",
    "github.com/go-on/queue.Ok": "func ()",
    "github.com/go-on/queue.OnError": "func (ErrHandler) *Queue",
    "github.com/go-on/queue.PANIC": "ErrHandlerFunc(func(err error) error {\n\u0009panic(err.Error())\n\u0009return err\n})",
    "github.com/go-on/queue.PIPE": "pipe{}",
    "github.com/go-on/queue.Queue": "type Queue struct{}",
    "github.com/go-on/queue.Queuer": "type Queuer interface {Queue() *Queue}",
    "github.com/go-on/queue.Run": "func (...Queuer) callrun",
    "github.com/go-on/queue.STOP": "ErrHandlerFunc(func(err error) error { return err })",
    "github.com/go-on/queue.Set": "func (interface{},interface{})",
    "github.com/go-on/queue.Value": "func (interface{}) interface{}",
    "github.com/go-on/queue.init": ""
  },
  "Path": "github.com/go-on/queue/q"
}
