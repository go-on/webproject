{
  "Exports": {
    "*Queue.Add": "(*Queue) Add(interface{},...interface{}) *Queue",
    "*Queue.AddNamed": "(*Queue) AddNamed(string,interface{},...interface{}) *Queue",
    "*Queue.Check": "(*Queue) Check() error",
    "*Queue.CheckAndRun": "(*Queue) CheckAndRun() error",
    "*Queue.LogDebugTo": "(*Queue) LogDebugTo(io.Writer) *Queue",
    "*Queue.LogErrorsTo": "(*Queue) LogErrorsTo(io.Writer) *Queue",
    "*Queue.Name": "(*Queue) Name() string",
    "*Queue.OnError": "(*Queue) OnError(ErrHandler) *Queue",
    "*Queue.Queue": "(*Queue) Queue() *Queue",
    "*Queue.Run": "(*Queue) Run() error",
    "*Queue.SetName": "(*Queue) SetName(string) *Queue",
    "*Queue.Sub": "(*Queue) Sub(...Queuer) *Queue",
    "*Queue.Tee": "(*Queue) Tee(interface{},...interface{}) *Queue",
    "*Queue.TeeAndCheckAndFallback": "(*Queue) TeeAndCheckAndFallback(...Queuer) *Queue",
    "*Queue.TeeAndCheckAndRun": "(*Queue) TeeAndCheckAndRun(...Queuer) *Queue",
    "*Queue.TeeAndFallback": "(*Queue) TeeAndFallback(...Queuer) *Queue",
    "*Queue.TeeAndRun": "(*Queue) TeeAndRun(...Queuer) *Queue",
    "*Queue.TeeNamed": "(*Queue) TeeNamed(string,interface{},...interface{}) *Queue",
    "Add": "func (interface{},...interface{}) *Queue",
    "AddNamed": "func (string,interface{},...interface{}) *Queue",
    "Call": "func (interface{},...interface{}) *call",
    "CallNamed": "func (string,interface{},...interface{}) *call",
    "CallPanic": "type CallPanic struct {ErrorMessage string; Name string; Params []interface{}; Position int; Type string}",
    "CallPanic.Error": "(CallPanic) Error() string",
    "Collect": "func (interface{},...interface{}) interface{}",
    "ErrHandler": "type ErrHandler interface {HandleError(error) error}",
    "ErrHandlerFunc": "type ErrHandlerFunc (error) error",
    "ErrHandlerFunc.HandleError": "(ErrHandlerFunc) HandleError(error) error",
    "Fallback": "func (...Queuer) callfallback",
    "Get": "func (interface{}) interface{}",
    "IGNORE": "ErrHandlerFunc(func(err error) error { return nil })",
    "InvalidArgument": "type InvalidArgument struct {ErrorMessage string; Name string; Position int; Type string}",
    "InvalidArgument.Error": "(InvalidArgument) Error() string",
    "InvalidFunc": "type InvalidFunc struct {ErrorMessage string; Name string; Position int; Type string}",
    "InvalidFunc.Error": "(InvalidFunc) Error() string",
    "New": "func () *Queue",
    "Ok": "func ()",
    "OnError": "func (ErrHandler) *Queue",
    "PANIC": "ErrHandlerFunc(func(err error) error {\n\u0009panic(err.Error())\n\u0009return err\n})",
    "PIPE": "pipe{}",
    "Queue": "type Queue struct{}",
    "Queuer": "type Queuer interface {Queue() *Queue}",
    "Run": "func (...Queuer) callrun",
    "STOP": "ErrHandlerFunc(func(err error) error { return err })",
    "Set": "func (interface{},interface{})",
    "Value": "func (interface{}) interface{}",
    "init": ""
  },
  "Imports": {},
  "Path": "github.com/go-on/queue"
}
