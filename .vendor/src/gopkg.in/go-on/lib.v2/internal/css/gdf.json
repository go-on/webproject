{
  "Exports": {
    "*RuleStruct.Child": "(*RuleStruct) Child(github.com/go-on/html.Selecter,...interface{})(*RuleStruct,error)",
    "*RuleStruct.Compose": "(*RuleStruct) Compose(...*RuleStruct) *RuleStruct",
    "*RuleStruct.Copy": "(*RuleStruct) Copy() *RuleStruct",
    "*RuleStruct.Descendant": "(*RuleStruct) Descendant(github.com/go-on/html.Selecter,...interface{})(*RuleStruct,error)",
    "*RuleStruct.DirectFollows": "(*RuleStruct) DirectFollows(github.com/go-on/html.Selecter,...interface{})(*RuleStruct,error)",
    "*RuleStruct.Each": "(*RuleStruct) Each(github.com/go-on/html.Selecter,...interface{})(*RuleStruct,error)",
    "*RuleStruct.Embed": "(*RuleStruct) Embed(github.com/go-on/html.Selecter) *RuleStruct",
    "*RuleStruct.Follows": "(*RuleStruct) Follows(github.com/go-on/html.Selecter,...interface{})(*RuleStruct,error)",
    "*RuleStruct.ForEach": "(*RuleStruct) ForEach(github.com/go-on/html.SelecterAdder,...Selecter)(*RuleStruct,error)",
    "*RuleStruct.Nest": "(*RuleStruct) Nest(...interface{})(*RuleStruct,error)",
    "*RuleStruct.String": "(*RuleStruct) String() string",
    "*RuleStruct.Style": "(*RuleStruct) Style(...FormatDefinition) *RuleStruct",
    "Css": "func (...interface{}) *RuleStruct",
    "CssStringer": "type CssStringer interface {Css() string}",
    "Import": "type Import string",
    "Import.String": "(Import) String() string",
    "Nest": "func (...interface{}) *nest",
    "ParentSelector": "SelectorString(\"\u0026\")",
    "Rule": "func (...interface{})(*RuleStruct,error)",
    "RuleStruct": "type RuleStruct struct {Comment string; Parent *RuleStruct; Selector github.com/go-on/html.Selecter; Styles []github.com/go-on/html.Styler}",
    "Rules": "func () *rules",
    "Super": "func (...Selecter) github.com/go-on/html.Selecter",
    "init": ""
  },
  "Imports": {
    "github.com/go-on/html.Child": "func (...Selecter) combinator",
    "github.com/go-on/html.Comment": "type Comment string",
    "github.com/go-on/html.Comment.Placeholder": "(Comment) Placeholder() Placeholder",
    "github.com/go-on/html.Comment.String": "(Comment) String() string",
    "github.com/go-on/html.Descendant": "func (...Selecter) combinator",
    "github.com/go-on/html.DirectFollows": "func (...Selecter) combinator",
    "github.com/go-on/html.Each": "func (...Selecter) combinator",
    "github.com/go-on/html.Follows": "func (...Selecter) combinator",
    "github.com/go-on/html.FormatDefinition": "type FormatDefinition struct {Property string; Value string}",
    "github.com/go-on/html.FormatDefinition.Matches": "(FormatDefinition) Matches(*Element) bool",
    "github.com/go-on/html.FormatDefinition.Placeholder": "(FormatDefinition) Placeholder() Placeholder",
    "github.com/go-on/html.FormatDefinition.String": "(FormatDefinition) String() string",
    "github.com/go-on/html.FormatDefinition.Style": "(FormatDefinition) Style() string",
    "github.com/go-on/html.FormatDefinition.Val": "(FormatDefinition) Val(string) FormatDefinition",
    "github.com/go-on/html.Selecter": "type Selecter interface {Selector() string}",
    "github.com/go-on/html.SelecterAdder": "type SelecterAdder interface {Add(Selecter) SelecterAdder; Selector() string}",
    "github.com/go-on/html.Selector": "func (Selecter,...Selecter) Selecter",
    "github.com/go-on/html.SelectorString": "type SelectorString string",
    "github.com/go-on/html.SelectorString.Selector": "(SelectorString) Selector() string",
    "github.com/go-on/html.Styler": "type Styler interface {Style() string}",
    "github.com/go-on/html.Styles": "func (...string) FormatDefinitions",
    "github.com/go-on/html.init": ""
  },
  "Path": "github.com/go-on/css"
}
