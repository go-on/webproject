{
  "Exports": {
    "Breadcrumb": "func () breadcrumb",
    "Button": "func (github.com/go-on/html.Class,string,string) github.com/go-on/menu.WriterTo",
    "Dropdown": "func () github.com/go-on/menu.WriterTo",
    "DropdownButton": "func (github.com/go-on/html.Class,string,string) github.com/go-on/menu.WriterTo",
    "ListGroup": "func () listgroup",
    "NavBar": "func (...html.Class) github.com/go-on/menu.WriterTo",
    "Pills": "func (bool,...html.Class) github.com/go-on/menu.WriterTo",
    "Tabs": "func (bool,bool,...html.Class) github.com/go-on/menu.WriterTo",
    "init": ""
  },
  "Imports": {
    "github.com/go-on/bootstrap/bs3.Active": "html.Class(\"active\")",
    "github.com/go-on/bootstrap/bs3.Breadcrumb": "html.Class(\"breadcrumb\")",
    "github.com/go-on/bootstrap/bs3.Btn": "html.Class(\"btn\")",
    "github.com/go-on/bootstrap/bs3.Caret": "html.Class(\"caret\")",
    "github.com/go-on/bootstrap/bs3.Disabled": "html.Class(\"disabled\")",
    "github.com/go-on/bootstrap/bs3.Divider": "html.Class(\"divider\")",
    "github.com/go-on/bootstrap/bs3.Dropdown": "html.Class(\"dropdown\")",
    "github.com/go-on/bootstrap/bs3.Dropdown_menu": "html.Class(\"dropdown-menu\")",
    "github.com/go-on/bootstrap/bs3.Dropdown_toggle": "html.Class(\"dropdown-toggle\")",
    "github.com/go-on/bootstrap/bs3.List_group": "html.Class(\"list-group\")",
    "github.com/go-on/bootstrap/bs3.List_group_item": "html.Class(\"list-group-item\")",
    "github.com/go-on/bootstrap/bs3.Nav": "html.Class(\"nav\")",
    "github.com/go-on/bootstrap/bs3.Nav_pills": "html.Class(\"nav-pills\")",
    "github.com/go-on/bootstrap/bs3.Nav_tabs": "html.Class(\"nav-tabs\")",
    "github.com/go-on/bootstrap/bs3.Navbar_nav": "html.Class(\"navbar-nav\")",
    "github.com/go-on/bootstrap/bs3.init": "",
    "github.com/go-on/html.*Element.Add": "(*Element) Add(...interface{}) error",
    "github.com/go-on/html.*Element.AddAfter": "(*Element) AddAfter(*Element,Elementer) error",
    "github.com/go-on/html.*Element.AddAtPosition": "(*Element) AddAtPosition(int,Elementer) error",
    "github.com/go-on/html.*Element.AddBefore": "(*Element) AddBefore(*Element,Elementer) error",
    "github.com/go-on/html.*Element.AddClass": "(*Element) AddClass(...Class) error",
    "github.com/go-on/html.*Element.AddElements": "(*Element) AddElements(...*Element) error",
    "github.com/go-on/html.*Element.All": "(*Element) All(Matcher) []*Element",
    "github.com/go-on/html.*Element.Any": "(*Element) Any(Matcher) *Element",
    "github.com/go-on/html.*Element.Attribute": "(*Element) Attribute(string) string",
    "github.com/go-on/html.*Element.Attributes": "(*Element) Attributes() map[string]string",
    "github.com/go-on/html.*Element.AttrsString": "(*Element) AttrsString() string",
    "github.com/go-on/html.*Element.Children": "(*Element) Children() []*Element",
    "github.com/go-on/html.*Element.Classes": "(*Element) Classes() []Class",
    "github.com/go-on/html.*Element.Clear": "(*Element) Clear()",
    "github.com/go-on/html.*Element.CompiledHandler": "(*Element) CompiledHandler() net/http.Handler",
    "github.com/go-on/html.*Element.Fields": "(*Element) Fields() []*Element",
    "github.com/go-on/html.*Element.HasClass": "(*Element) HasClass(Class) bool",
    "github.com/go-on/html.*Element.Id": "(*Element) Id() Id",
    "github.com/go-on/html.*Element.InnerHtml": "(*Element) InnerHtml() string",
    "github.com/go-on/html.*Element.InnerPlaceholderHandler": "(*Element) InnerPlaceholderHandler() []github.com/go-on/template.PlaceholderHandler",
    "github.com/go-on/html.*Element.Is": "(*Element) Is(flag) bool",
    "github.com/go-on/html.*Element.IsParentAllowed": "(*Element) IsParentAllowed(Tager) bool",
    "github.com/go-on/html.*Element.MustAdd": "(*Element) MustAdd(...interface{}) *Element",
    "github.com/go-on/html.*Element.NotEscape": "(*Element) NotEscape() *Element",
    "github.com/go-on/html.*Element.Parent": "(*Element) Parent() Pather",
    "github.com/go-on/html.*Element.Path": "(*Element) Path() string",
    "github.com/go-on/html.*Element.PositionOf": "(*Element) PositionOf(*Element)(int,bool)",
    "github.com/go-on/html.*Element.RemoveAttribute": "(*Element) RemoveAttribute(string)",
    "github.com/go-on/html.*Element.RemoveClass": "(*Element) RemoveClass(Class)",
    "github.com/go-on/html.*Element.Selecter": "(*Element) Selecter(...Selecter) Selecter",
    "github.com/go-on/html.*Element.Selector": "(*Element) Selector() string",
    "github.com/go-on/html.*Element.ServeHTTP": "(*Element) ServeHTTP(net/http.ResponseWriter,*net/http.Request)",
    "github.com/go-on/html.*Element.SetAtPosition": "(*Element) SetAtPosition(int,Elementer) error",
    "github.com/go-on/html.*Element.SetAttribute": "(*Element) SetAttribute(string,string)",
    "github.com/go-on/html.*Element.SetAttributes": "(*Element) SetAttributes(...string)",
    "github.com/go-on/html.*Element.SetBottom": "(*Element) SetBottom(Elementer) error",
    "github.com/go-on/html.*Element.SetClass": "(*Element) SetClass(...Class)",
    "github.com/go-on/html.*Element.SetContent": "(*Element) SetContent(...interface{}) error",
    "github.com/go-on/html.*Element.SetId": "(*Element) SetId(Id) error",
    "github.com/go-on/html.*Element.SetParent": "(*Element) SetParent(Pather)",
    "github.com/go-on/html.*Element.String": "(*Element) String() string",
    "github.com/go-on/html.*Element.Tag": "(*Element) Tag() string",
    "github.com/go-on/html.*Element.WrapChildren": "(*Element) WrapChildren(*Element)",
    "github.com/go-on/html.Attr": "func (string,string) Attribute",
    "github.com/go-on/html.Attrs": "func (...string) Attributes",
    "github.com/go-on/html.Class": "type Class string",
    "github.com/go-on/html.Class.Matches": "(Class) Matches(*Element) bool",
    "github.com/go-on/html.Class.Placeholder": "(Class) Placeholder() Placeholder",
    "github.com/go-on/html.Class.Selector": "(Class) Selector() string",
    "github.com/go-on/html.Class.String": "(Class) String() string",
    "github.com/go-on/html.Element": "type Element struct { *Wrapper; Descr Descr; ParentTags tags}",
    "github.com/go-on/html.init": "",
    "github.com/go-on/html/h.AHref": "func (string,...interface{}) *github.com/go-on/html.Element",
    "github.com/go-on/html/h.init": "",
    "github.com/go-on/html/tag.BUTTON": "func (...interface{}) *github.com/go-on/html.Element",
    "github.com/go-on/html/tag.DIV": "func (...interface{}) *github.com/go-on/html.Element",
    "github.com/go-on/html/tag.LI": "func (...interface{}) *github.com/go-on/html.Element",
    "github.com/go-on/html/tag.OL": "func (...interface{}) *github.com/go-on/html.Element",
    "github.com/go-on/html/tag.SPAN": "func (...interface{}) *github.com/go-on/html.Element",
    "github.com/go-on/html/tag.UL": "func (...interface{}) *github.com/go-on/html.Element",
    "github.com/go-on/html/tag.init": "07b317226bb7ddce97acefdef572f995",
    "github.com/go-on/menu.*Node.FindByPath": "(*Node) FindByPath(string) *Node",
    "github.com/go-on/menu.*Node.FindByText": "(*Node) FindByText(string) *Node",
    "github.com/go-on/menu.*Node.MarshalJSON": "(*Node) MarshalJSON()([]byte,error)",
    "github.com/go-on/menu.*Node.RootAt": "(*Node) RootAt(int,string) *Node",
    "github.com/go-on/menu.*Node.UnmarshalJSON": "(*Node) UnmarshalJSON([]byte) error",
    "github.com/go-on/menu.Leaf": "type Leaf interface {Path() string; String() string}",
    "github.com/go-on/menu.Node": "type Node struct {Edges []*Node; Leaf Leaf}",
    "github.com/go-on/menu.WriterTo": "type WriterTo interface {WriterTo(*Node,int,string) io.WriterTo}",
    "github.com/go-on/menu.init": "",
    "github.com/go-on/menu/menuhtml.New": "func (Formatter) github.com/go-on/menu.WriterTo",
    "github.com/go-on/menu/menuhtml.init": ""
  },
  "Path": "github.com/go-on/bootstrap/bs3/bs3menu"
}
